plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '5.0.0'
}

group 'pl.edu.agh.to2'
version '1.0-SNAPSHOT'

apply plugin: 'org.openjfx.javafxplugin'

repositories {
    mavenCentral()
    maven { url 'https://mvnrepository.com/artifact/net.kemitix/sqlite-dialect'}
}
//compile group: 'net.kemitix', name: 'sqlite-dialect', version: '0.1.0'


application {
    mainClassName = 'Main'
}
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

javafx {
    version = '17'
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.swing', 'javafx.web']
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.apache.commons:commons-collections4:4.5.0-M2'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.hibernate:hibernate-core:6.6.0.Final'
    implementation 'com.h2database:h2:2.2.224'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:4.0.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:4.0.5"
    implementation 'io.github.mkpaz:atlantafx-base:2.0.1'

    implementation 'org.slf4j:slf4j-api:2.0.9' // Version of SLF4J
    implementation 'ch.qos.logback:logback-classic:1.4.12' // Version of Logback
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

node {
    version = '18.16.0' // Specify Node.js version
    download = true     // Ensure Gradle downloads Node.js instead of using system-installed version
    workDir = file("${project.buildDir}/nodejs")  // Where to store Node.js binaries
    npmWorkDir = file("${project.buildDir}/npm")  // Where to store npm binaries
}

task startVite(type: NpmTask) {
    dependsOn npmInstall
    args = ['run', 'build']
    doFirst {
        // Ensure the React project directory is used
        workingDir = file("$projectDir/frontend")
    }
}

tasks.named('processResources') {
    dependsOn startVite
}

startVite.doLast {
    copy {
        from "$projectDir/frontend/dist"
        into "$buildDir/resources/main/static"
    }
}

// For running development servers in parallel, start Vite manually with npm run dev
tasks.bootRun {
    dependsOn npmInstall
}